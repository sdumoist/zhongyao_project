server:
  port: 8080
  address: 0.0.0.0
spring:
  profiles:
    active: dev
  datasource:
    driver-class-name: ${xp.datasource.driver-class-name}
    url: ${xp.datasource.url}
    username: ${xp.datasource.username}
    password: ${xp.datasource.password}
    type: ${xp.datasource.type}
    druid:
      initialSize: 5          # 初始连接数
      minIdle: 5              # 最小空闲连接
      maxActive: 20           # 最大活跃连接
      maxWait: 60000          # 获取连接超时时间（毫秒）
      timeBetweenEvictionRunsMillis: 60000  # 检测间隔
      minEvictableIdleTimeMillis: 300000    # 最小空闲时间
      validationQuery: SELECT 1             # 连接有效性检查语句
      testWhileIdle: true      # 空闲时检查
      testOnBorrow: false      # 借用时检查
      testOnReturn: false      # 归还时检查
      poolPreparedStatements: true  # 启用缓存PreparedStatement
      maxPoolPreparedStatementPerConnectionSize: 20
  data:
    redis:
      host: ${xp.redis.host}
      port: ${xp.redis.port}
      database: ${xp.redis.database}
#      password: ${xp.redis.password}

# mybatisplus配置
mybatis-plus:
  # xml扫描，多个目录用逗号或者分号分隔（告诉 Mapper 所对应的 XML 文件位置）
  mapper-locations: classpath:mapper/*.xml
  type-aliases-package: com.xpxp.pojo.entity
  # 以下配置均有默认值,可以不设置
  #  global-config:
  #    db-config:
  #      #主键类型 AUTO:"数据库ID自增" INPUT:"用户输入ID",ID_WORKER:"全局唯一ID (数字类型唯一ID)", UUID:"全局唯一ID UUID";
  #      id-type: auto
  #      #字段策略 IGNORED:"忽略判断"  NOT_NULL:"非 NULL 判断")  NOT_EMPTY:"非空判断"
  #      field-strategy: NOT_EMPTY
  #      #数据库类型
  #      db-type: MYSQL
  configuration:
    # 是否开启自动驼峰命名规则映射:从数据库列名到Java属性驼峰命名的类似映射
    map-underscore-to-camel-case: true
    #     如果查询结果中包含空值的列，则 MyBatis 在映射的时候，不会映射这个字段
    call-setters-on-nulls: true
    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    display-request-duration: true
xp:
  jwt:
    secret: aW1hZGV1cDMyYnl0ZXNlY3JldGtleWZvcmhzMjU2==xp
    expire: 86400
snowflake:
  worker-id: 1
  datacenter-id: 1
nl2sql:
  url: http://210.75.240.34:8000/chat
